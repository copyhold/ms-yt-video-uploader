name: Build Cross-Platform Executables

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - uses: FedericoCarboni/setup-ffmpeg@v3
        id: setup-ffmpeg
        with:
          # A specific version to download, may also be "release" or a specific version
          # like "6.1.0". At the moment semver specifiers (i.e. >=6.1.0) are supported
          # only on Windows, on other platforms they are allowed but version is matched
          # exactly regardless.
          ffmpeg-version: release
          # Target architecture of the ffmpeg executable to install. Defaults to the
          # system architecture. Only x64 and arm64 are supported (arm64 only on Linux).
          architecture: ''
          # Linking type of the binaries. Use "shared" to download shared binaries and 
          # "static" for statically linked ones. Shared builds are currently only available
          # for windows releases. Defaults to "static"
          linking-type: static
          # As of version 3 of this action, builds are no longer downloaded from GitHub
          # except on Windows: https://github.com/GyanD/codexffmpeg/releases.
          github-token: ${{ github.server_url == 'https://github.com' && github.token || '' }

      # --- Common Steps ---
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install google-api-python-client google-auth-httplib2 google-auth-oauthlib

      - name: Create client_secret.json
        shell: bash
        run: |
          echo "${{ secrets.CLIENT_SECRET_JSON }}" > client_secret.json

      # --- UNIFIED BUILD COMMAND ---
      # We no longer need to bundle ffmpeg.exe on Windows because setup-ffmpeg adds it to the PATH.
      # This means the build command is now identical for all platforms.
      - name: Build executable with PyInstaller
        # Use a platform-agnostic shell and command
        shell: bash 
        run: |
          # The path separator for --add-data is ":" for bash on all platforms
          pyinstaller --name "SermonUploader" \
                      --onefile \
                      --windowed \
                      --add-data "client_secret.json:." \
                      app.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: SermonUploader-${{ matrix.os }}
          path: |
            dist/SermonUploader.exe
            dist/SermonUploader
          if-no-files-found: ignore